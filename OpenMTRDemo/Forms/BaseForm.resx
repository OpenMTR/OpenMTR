<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAABAAgABsAIAAtgCA
        AOQAgADuAIAA7gCAAOQAgAC6AIAAcgCAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABgAIAA7gCA
        AP8AgAD/AIAA/wCAAP8AgAD/AIAA/wCAAP8AgAD/AIAA8gCAAGwAgAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAeACA
        AP8AgAD/AIAA/wCAAP8AgAD/AIAA/wCAAP8AgAD/AIAA/wCAAP8AgAD/AIAA/wCAAIoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
        AEAAgAD8AIAA/wCAAP8AgAD/AIAA/wCAAP8AgAD/AIAA/wCAAP8AgAD/AIAA/wCAAP8AgAD/AIAA/wCA
        AFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAgAAAAIAA0ACAAP8AgAD/AIAA/wCAAP8AgAD/AIAA+ACAAMgAgADGAIAA9gCAAP8AgAD/AIAA/wCA
        AP8AgAD/AIAA3gCAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACAAD4AgAD/AIAA/wCAAP8AgAD/AIAA/wCAALYAgAAYAAAAAAAAAAAAgAAUAIAAsACA
        AP8AgAD/AIAA/wCAAP8AgAD/AIAATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAIAAjACAAP8AgAD/AIAA/wCAAP8AgADcAIAACAAAAAAAAAAAAAAAAAAA
        AAAAgAAGAIAA2ACAAP8AgAD/AIAA/wCAAP8AgACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgADAAIAA/wCAAP8AgAD/AIAA/wCAAHwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAgAB4AIAA/wCAAP8AgAD/AIAA/wCAAMYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAANwAgAD/AIAA/wCAAP8AgAD/AIAAXgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAE4AgAD/AIAA/wCAAP8AgAD/AIAA4AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA5ACAAP8AgAD/AIAA/wCA
        AP8AgABeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAATACAAP8AgAD/AIAA/wCAAP8AgADoAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgADmAIAA/wCA
        AP8AgAD/AIAA/wCAAF4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABMAIAA/wCAAP8AgAD/AIAA/wCA
        AOwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
        AOoAgAD/AIAA/wCAAP8AgAD/AIAAXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEwAgAD/AIAA/wCA
        AP8AgAD/AIAA7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAIAA7ACAAP8AgAD/AIAA/wCAAP8AgABcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAATACA
        AP8AgAD/AIAA/wCAAP8AgADuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAgADsAIAA/wCAAP8AgAD/AIAA/wCAAFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAgABMAIAA/wCAAP8AgAD/AIAA/wCAAO4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAO4AgAD/AIAA/wCAAP8AgAD/AIAAWgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACAAEwAgAD/AIAA/wCAAP8AgAD/AIAA7gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA7gCAAP8AgAD/AIAA/wCAAP8AgABaAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAIAATACAAP8AgAD/AIAA/wCAAP8AgADuAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgADuAIAA/wCAAP8AgAD/AIAA/wCA
        AFoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABMAIAA/wCAAP8AgAD/AIAA/wCAAO4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAO4AgAD/AIAA/wCA
        AP8AgAD/AIAAWgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEwAgAD/AIAA/wCAAP8AgAD/AIAA7gAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA7ACA
        AP8AgAD/AIAA/wCAAP8AgABYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAATACAAP8AgAD/AIAA/wCA
        AP8AgADuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAgADsAIAA/wCAAP8AgAD/AIAA/wCAAFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABMAIAA/wCA
        AP8AgAD/AIAA/wCAAO4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACAAOoAgAD/AIAA/wCAAP8AgAD/AIAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
        AEwAgAD/AIAA/wCAAP8AgAD/AIAA7gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAIAA5gCAAP8AgAD/AIAA/wCAAP8AgABaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAIAATACAAP8AgAD/AIAA/wCAAP8AgADsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgADiAIAA/wCAAP8AgAD/AIAA/wCAAFwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAgABMAIAA/wCAAP8AgAD/AIAA/wCAAOgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAANwAgAD/AIAA/wCAAP8AgAD/AIAAYgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAE4AgAD/AIAA/wCAAP8AgAD/AIAA4AAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAvACAAP8AgAD/AIAA/wCA
        AP8AgACIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAegCAAP8AgAD/AIAA/wCAAP8AgADIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgACGAIAA/wCA
        AP8AgAD/AIAA/wCAAOIAgAAMAAAAAAAAAAAAAAAAAAAAAACAAAoAgADcAIAA/wCAAP8AgAD/AIAA/wCA
        AJIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
        ADYAgAD/AIAA/wCAAP8AgAD/AIAA/wCAAMAAgAAgAAAAAAAAAAAAgAAcAIAAvACAAP8AgAD/AIAA/wCA
        AP8AgAD/AIAARgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAIAAAACAAMoAgAD/AIAA/wCAAP8AgAD/AIAA/wCAAPwAgADSAIAA0ACAAPoAgAD/AIAA/wCA
        AP8AgAD/AIAA/wCAANgAgAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAIAAPACAAPoAgAD/AIAA/wCAAP8AgAD/AIAA/wCAAP8AgAD/AIAA/wCA
        AP8AgAD/AIAA/wCAAP8AgAD8AIAASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAbgCAAP8AgAD/AIAA/wCAAP8AgAD/AIAA/wCA
        AP8AgAD/AIAA/wCAAP8AgAD/AIAA/wCAAHoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAVgCAAOoAgAD/AIAA/wCA
        AP8AgAD/AIAA/wCAAP8AgAD/AIAA/wCAAOwAgABcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAADACA
        AGYAgACqAIAA2ACAAOwAgADqAIAA2gCAALAAgABoAIAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gf///gB///wAH//4AB//8AAP//A8D//gfgf/4P8H/+D/B//g/wf/4P
        8H/+D/B//g/wf/4P8H/+D/B//g/wf/4P8H/+D/B//g/wf/4P8H/+D/B//g/wf/4P8H/+D/B//gfwf/4H
        4H//A8D//wAA//+AAf//wAP//+AH///4H/8=
</value>
  </data>
</root>